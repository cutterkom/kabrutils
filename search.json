[{"path":"https://cutterkom.github.io/kabrutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Katharina Brunner. Author, maintainer.","code":""},{"path":"https://cutterkom.github.io/kabrutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brunner K (2022). kabrutils: Utility functions projects. R package version 0.0.0.9000, https://cutterkom.github.io/kabrutils/.","code":"@Manual{,   title = {kabrutils: Utility functions for my projects},   author = {Katharina Brunner},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://cutterkom.github.io/kabrutils/}, }"},{"path":"https://cutterkom.github.io/kabrutils/index.html","id":"kabrutils","dir":"","previous_headings":"","what":"Utility functions for my projects","title":"Utility functions for my projects","text":"kabrutils package store bunch functions use regularly.","code":""},{"path":"https://cutterkom.github.io/kabrutils/index.html","id":"installationupdate","dir":"","previous_headings":"","what":"Installation/Update","title":"Utility functions for my projects","text":"can install development version kabrutils GitHub :","code":"# install.packages(\"credentials\") credentials::set_github_pat() # install.packages(\"devtools\") devtools::install_github(\"cutterkom/kabrutils\")"},{"path":"https://cutterkom.github.io/kabrutils/reference/calc_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Similarities — calc_similarity","title":"Calculate Similarities — calc_similarity","text":"functions compute similarities entries document frequency matrix dfm() return dataframe distinct id combinations. heavily relies quanteda package","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/calc_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Similarities — calc_similarity","text":"","code":"calc_similarity(data, method, min_sim)"},{"path":"https://cutterkom.github.io/kabrutils/reference/calc_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Similarities — calc_similarity","text":"data data document frequency matrix dfm() set doc_id method character; method identifying similarity distance measure used, see ?quanteda::textstat_simil min_sim numeric; threshold similarity values similarity values returned; 0.75-0.8 seems reasonable","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/calc_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Similarities — calc_similarity","text":"dataframe containing two id's similarity value","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/call_lobid_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Call lobid API — call_lobid_api","title":"Call lobid API — call_lobid_api","text":"lobid offers three types APIs: resources, organisations gnd. See respective docs : https://lobid.org/resources https://lobid.org/organisations https://lobid.org/gnd","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/call_lobid_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call lobid API — call_lobid_api","text":"","code":"call_lobid_api(   query,   parameter = NULL,   verbose = TRUE,   as_list = FALSE,   lobid_api_type = \"resources\" )"},{"path":"https://cutterkom.github.io/kabrutils/reference/call_lobid_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call lobid API — call_lobid_api","text":"query string parameter string, e.g. isbn verbose TRUE, url printed console as_list default: FALSE. TRUE json converted R list, otherwise just url lobid_api_type lobid offers 3 types APIs: resources, organisations gnd; defaults resources","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/call_lobid_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call lobid API — call_lobid_api","text":"list","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/call_lobid_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call lobid API — call_lobid_api","text":"","code":"if (FALSE) { call_lobid_api(3894090685, query = ., parameter = \"isbn\") }"},{"path":"https://cutterkom.github.io/kabrutils/reference/clean_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean string — clean_string","title":"Clean string — clean_string","text":"remove leading trailing whitespace change characters lowercase representation remove punctuation numbers transforming special characters (ä, ß, ...) 1) de-ASCII 2) Latin-ASCII (see stri_trans_list())","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/clean_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean string — clean_string","text":"","code":"clean_string(data, col)"},{"path":"https://cutterkom.github.io/kabrutils/reference/clean_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean string — clean_string","text":"data dataframe col string; column name clean","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/clean_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean string — clean_string","text":"","code":"df <- data.frame(name = \"Fritz Müller-Scherz 2\") clean_string(df, \"name\") #>                   name #> 1 fritz mueller scherz"},{"path":"https://cutterkom.github.io/kabrutils/reference/collapse_to_distinct_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse ID cols to distinct rows — collapse_to_distinct_rows","title":"Collapse ID cols to distinct rows — collapse_to_distinct_rows","text":"Imagine dataframe two id columns contain two rows actually just one combination. function distincts within purrr workflow, see example.","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/collapse_to_distinct_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse ID cols to distinct rows — collapse_to_distinct_rows","text":"","code":"collapse_to_distinct_rows(...)"},{"path":"https://cutterkom.github.io/kabrutils/reference/collapse_to_distinct_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse ID cols to distinct rows — collapse_to_distinct_rows","text":"... string numeric vectors, typically id columns","code":""},{"path":[]},{"path":"https://cutterkom.github.io/kabrutils/reference/collapse_to_distinct_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse ID cols to distinct rows — collapse_to_distinct_rows","text":"","code":"if (FALSE) { df <- data.frame(id_1 = c(1,2), id_2 = c(2,1)) df %>%   dplyr::mutate(id_1_id_2 = purrr::map2_chr(id_1, id_2, collapse_to_distinct_rows)) %>%   dplyr::distinct(id_1_id_2, .keep_all = TRUE) %>%   dplyr::select(-id_1_id_2)   }"},{"path":"https://cutterkom.github.io/kabrutils/reference/connect_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to Databases — connect_db","title":"Connect to Databases — connect_db","text":"Used connect databases using configuration file - unix windows credentials stored external file home directory ~. Unix: Edit credentials file.edit(\"~/config.yml\"). Windows: Edit credentials file.edit(\"~/..cnf\").","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/connect_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to Databases — connect_db","text":"","code":"connect_db(   credential_name = \"db_local\",   package = \"DBI\",   config_path = \"~/config.yml\",   default.file.windows = \"~/.my.cnf\" )"},{"path":"https://cutterkom.github.io/kabrutils/reference/connect_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to Databases — connect_db","text":"credential_name Credential identification configuration file, example datascience, factfield_data pubmed package package used: DBI dbx config_path Path credential file, example: \"~/dbconfig.yml\" default.file.windows Path configuration file windows example: \"~/..cnf\"","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/connect_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to Databases — connect_db","text":"inside .yml file? default:  factfield_data:  host: 'db_main.factfield.de'  user: '........'  password: '......'  port: 13306  dbname: 'db_main'  inside .cnf file? Something like : https://gist.github.com/rhtyd/d59078be4dc88123104e","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/connect_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to Databases — connect_db","text":"","code":"connect_db() # this connect to factfield_data db_main auto using the credential from the yml data. #> Error in config::get(file = config_path, credential_name): Config file config.yml not found in current working directory or parent directories"},{"path":"https://cutterkom.github.io/kabrutils/reference/convert_columns_to_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts specific columns to numeric. — convert_columns_to_numeric","title":"Converts specific columns to numeric. — convert_columns_to_numeric","text":"first, imported columns characters/strings. course, data columns numeric values. function makes educated guess find columns contain numeric values.","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/convert_columns_to_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts specific columns to numeric. — convert_columns_to_numeric","text":"","code":"convert_columns_to_numeric(df)"},{"path":"https://cutterkom.github.io/kabrutils/reference/convert_columns_to_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts specific columns to numeric. — convert_columns_to_numeric","text":"df dataframe","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/convert_columns_to_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts specific columns to numeric. — convert_columns_to_numeric","text":"dataframe","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/convert_columns_to_numeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts specific columns to numeric. — convert_columns_to_numeric","text":"done several steps: make values label missing values NA set decimal marks . guess colums numeric setting .numeric -z characters column","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/extract_text.html","id":null,"dir":"Reference","previous_headings":"","what":"extract text from xml nodes — extract_text","title":"extract text from xml nodes — extract_text","text":"scraping data rvest one typically extract text nodes. functions helps . makes sure, multiple p parsed one object. important, parsing different-length items one dataframe.","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/extract_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract text from xml nodes — extract_text","text":"","code":"extract_text(node, class)"},{"path":"https://cutterkom.github.io/kabrutils/reference/extract_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract text from xml nodes — extract_text","text":"node node class css class parse","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/extract_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract text from xml nodes — extract_text","text":"","code":"if (FALSE) { \"https://forummuenchen.org/lgbtiq-chronik/\" %>%   read_html() %>%   html_nodes(\".timeline-item\") %>%   extract_text(\"p\") }"},{"path":"https://cutterkom.github.io/kabrutils/reference/get_field_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get value of a special field — get_field_values","title":"Get value of a special field — get_field_values","text":"function fetches value fields nested json, matter level. Based popular js, JSON command line processor https://stedolan.github.io/jq/","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/get_field_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get value of a special field — get_field_values","text":"","code":"get_field_values(input, input_type = \"url\", jq_syntax)"},{"path":"https://cutterkom.github.io/kabrutils/reference/get_field_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get value of a special field — get_field_values","text":"input json url input_type url string, response fetched response (e.g. using response multiple queries) jq_syntax jq filter (test https://jqplay.org/)","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/get_field_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get value of a special field — get_field_values","text":"","code":"if (FALSE) { \"https://lobid.org/resources/search?q=isbn:3596237785&format=json\" %>% get_field_values(\"gndIdentifier\") }"},{"path":"https://cutterkom.github.io/kabrutils/reference/kabrutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"kabrutils: Utility functions for my projects — kabrutils-package","title":"kabrutils: Utility functions for my projects — kabrutils-package","text":"package (one paragraph).","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/kabrutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"kabrutils: Utility functions for my projects — kabrutils-package","text":"Maintainer: Katharina Brunner first.last@example.com","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://cutterkom.github.io/kabrutils/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/show_in_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a dataframe in an Excel file — show_in_excel","title":"Open a dataframe in an Excel file — show_in_excel","text":"Pipe dataframe xlsx file save maybe.","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/show_in_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a dataframe in an Excel file — show_in_excel","text":"","code":"show_in_excel(data)"},{"path":"https://cutterkom.github.io/kabrutils/reference/show_in_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a dataframe in an Excel file — show_in_excel","text":"data dataframe show","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/show_in_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a dataframe in an Excel file — show_in_excel","text":"","code":"if (FALSE) { mtcars %>% filter(am == 1) %>% show_in_excel() }"},{"path":"https://cutterkom.github.io/kabrutils/reference/split_human_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a human full name in its parts — split_human_name","title":"Split a human full name in its parts — split_human_name","text":"Rules:","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/split_human_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a human full name in its parts — split_human_name","text":"","code":"split_human_name(data, col = \"name\")"},{"path":"https://cutterkom.github.io/kabrutils/reference/split_human_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a human full name in its parts — split_human_name","text":"data dataframe containing column human name col string; name column containing name, defaults name","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/split_human_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a human full name in its parts — split_human_name","text":"dataframe 4 new colums: lastname, givenname, middlename, initial","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/split_human_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split a human full name in its parts — split_human_name","text":"lastname = last word givenname = first word middlename = everything first word last word initial = first character Beware warning argument atomic vector; coercing  works nonetheless. general might good idea try split human name, nearly impossible correctly. Mainly works Kartoffel names.","code":""},{"path":[]},{"path":"https://cutterkom.github.io/kabrutils/reference/split_human_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a human full name in its parts — split_human_name","text":"","code":"df <- data.frame(name = c(\"Rita Mae Brown\", \"vorname df dsafasf\", \"sdf asdfd\")) split_human_name(df) #>                 name lastname givenname middlename initial #> 1     Rita Mae Brown    Brown      Rita        Mae       R #> 2 vorname df dsafasf  dsafasf   vorname         df       v #> 3          sdf asdfd    asdfd       sdf       <NA>       s"},{"path":"https://cutterkom.github.io/kabrutils/reference/transform_json_to_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform json to a tidy dataframe\nUses jsonlite::fromJSON together with some map, enframe and unnest_wider to create a tidy tibble/dataframe. — transform_json_to_dataframe","title":"Transform json to a tidy dataframe\nUses jsonlite::fromJSON together with some map, enframe and unnest_wider to create a tidy tibble/dataframe. — transform_json_to_dataframe","text":"Transform json tidy dataframe Uses jsonlite::fromJSON together map, enframe unnest_wider create tidy tibble/dataframe.","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/transform_json_to_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform json to a tidy dataframe\nUses jsonlite::fromJSON together with some map, enframe and unnest_wider to create a tidy tibble/dataframe. — transform_json_to_dataframe","text":"","code":"transform_json_to_dataframe(json, unnest_type = \"long\", keep_name = TRUE)"},{"path":"https://cutterkom.github.io/kabrutils/reference/transform_json_to_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform json to a tidy dataframe\nUses jsonlite::fromJSON together with some map, enframe and unnest_wider to create a tidy tibble/dataframe. — transform_json_to_dataframe","text":"json json string unnest_type dataframe wide long? keep_name default: TRUE; tibble::enframe() names resulting cols, decide name column needed","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/transform_json_to_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform json to a tidy dataframe\nUses jsonlite::fromJSON together with some map, enframe and unnest_wider to create a tidy tibble/dataframe. — transform_json_to_dataframe","text":"dataframe/tibble","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/transform_json_to_dataframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform json to a tidy dataframe\nUses jsonlite::fromJSON together with some map, enframe and unnest_wider to create a tidy tibble/dataframe. — transform_json_to_dataframe","text":"","code":"if (FALSE) { res <- httr::GET(\"https://lobid.org/gnd/search?q=preferredName:Max%20Spohr&format=json\") res <- httr::content(res, as = \"text\") df_from_json <- transform_json_to_dataframe(res, unnest_type = \"wide\") }"},{"path":"https://cutterkom.github.io/kabrutils/reference/write_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a dataframe to an xlsx file — write_xlsx","title":"Write a dataframe to an xlsx file — write_xlsx","text":"adds filter auto-width","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/write_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a dataframe to an xlsx file — write_xlsx","text":"","code":"write_xlsx(data, filename, sheet)"},{"path":"https://cutterkom.github.io/kabrutils/reference/write_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a dataframe to an xlsx file — write_xlsx","text":"data dataframe export filename name excel file sheet sheetname","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/write_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a dataframe to an xlsx file — write_xlsx","text":"beware: deletes existing file name","code":""},{"path":"https://cutterkom.github.io/kabrutils/reference/write_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a dataframe to an xlsx file — write_xlsx","text":"","code":"if (FALSE) { write_xlsx(my_data, \"name.xlsx\", \"sheetname\") }"}]
